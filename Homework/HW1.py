'''
1)Найти значения выражений:'''
# a = 17 / 2 * 3 + 2
# b = 2 + 17 / 2 * 3
# c = 19 % 4 + 15 / 2 * 3
# d = 15 + 6 - 10 * 4
# e = 17 / 2 % 2 * 3 ** 3

'''
1)Расставить скобки так, чтобы получился следующий результат:'''
# a = 17 / 2 * (3 + 2)
# b = (2 + 17) / 2 * 3
# c = 19 % (4 + 15) / 2 * 3
# d = (15 + 6 - 10) * 4
# e = 17 / 2 % (2 * 3 ** 3)
# print(a, b, c, d, e)


'''
3) Анна пошла в магазин, у неё было 11 рублей. Хлеб стоит 1 рубль 50 копеек.
анна купила 3 буханки хлеба. Сколько рублей у неё осталось?'''
# print(11-1.5*3)


'''
4) У Анны 2 яблока, у Пола 5 яблок. Выведите на экран сколько яблок у Пола и сколько яблок у Анны одной командой 
print(), использовать переменные.'''
# a = 2
# p = 5
# print(p, a)


'''
5) Напишите программу которая переводит число суток в часы, минуты и секунды. Задачу решить в 2 строчки.
Формат вывода по образцу.
days = 5
Sample Output:
5 суток = 120 часов = 7200 минут = 432000 секунд'''
# days = int(input())
# print(days, 'суток = ', days * 24, 'часов = ', days * 24 * 60, 'минут =', days * 24 * 60 ** 2, 'секунд')


'''
6) Напишите программу, которая вычисляет сколько полных недель прошло за период, если прошло 182 дня.'''
# print(182//7)

'''
7) Дан прямоугольник со сторонами a см и b см, сколько квадратов со стороной 30 см можно отрезать от него.
a и b задаются в одной строке с клавиатуры.
side_1 = 150  side_2 = 65
Sample Output :
Можно отрезать 10 квадратов. 
'''
# side_1 = int(input())
# side_2 = int(input())
# print(side_1 // 30 * side_2 // 30)

'''
8) Дано число секунд. Вычислите сколько это часов, минут и секунд.
seconds = 4000
Sample Output :
1 час
6 минут
40 секунд
'''
# seconds = int(input())
# hours = seconds//60**2
# min = (seconds - hours*60**2)//60
# sec = seconds - hours*60**2 -min * 60
# print(f'{hours} час\n{min} минут\n{sec} секунд')


'''
9) Нужно заплатить N рублей. Есть купюры 100, 50, 10, 1 руб. Сколько купюр каждого достоинства нужно отдать покупателю,
 если он будет платить с самых крупных.
cash = 361
Sample Output :
3 купюры по 100 рублей
1 купюры по 50 рублей
1 купюры по 10 рублей
1 купюры по 1 рублей
'''
# a = int(input())
# _100rub = a // 100
# _50rub = (a % 100) // 50
# _10rub = (a % 50) // 10
# _1rub = (a % 10)
# print(f'{_100rub} купюры по 100 рублей\n{_50rub} купюры по 50 рублей\n{_10rub} купюры по 10 рублей'
#       f'\n{_1rub} купюры по 1 рублей')

'''
10) Улитка ползет по вертикальному шесту высотой h метров, поднимаясь за день на x метров, 
а за ночь спускаясь на y метров. На какой день улитка доползет до вершины шеста?'''

# h = int(input())
# x = int(input())
# y = int(input())
#
# if h % (x - y) == 0:
#     print(h // (x - y))
# else:
#     print(h // (x - y) + 1)


'''11) Длина Минской кольцевой автомобильной дороги —56 километров. Байкер  стартует с нулевого километра МКАД и 
едет со скоростью V километров в час. На какой отметке он остановится через T часов M минут?'''

# route = 56
# speed = int(input())
# hours = int(input())
# minutes = int(input())
#
#
# if speed * float(hours + minutes/60) > 56:
#     print((speed * float(hours + minutes/60))%56)
# else:
#     print(speed * float(hours + minutes / 60))



'''
git init – создание репозитория
git clone - копирование удаленного репозитория
git add – добавляет указанные файлы для послудующего commit 
git commit – сохраняет/обновляет файлы которые были добавлены с помощью git add во внутреннюю базу данных и добавляет точку «возврата»
git push – отправляет в удаленный репозиторий закоммиченые изменения
git pull – забирает изменения с удаленного репозитория и сливает с текущей веткой
git branch – создание/удаление/переименовывание веток, без параметров показывает список веток
git checkout – переключение между ветками
git merge – слияние одной или нескольких веток в текущую
git rebase - берет все коммиты из одной ветки и в том же порядке применить их к другой ветке
git cherry-pick – копирует выбранный коммит из одной ветки и применить его к другой 
git status – показывает состояние файлов в рабочем каталоге
git log – просмотр истории коммитов
git reset – отменяет изменения последнего коммита 
git revert - создает новый коммит, применяющий изменения 
обратный для указанного аргумента
git stash – используется для временного сохранения всех незафиксированных изменений без необходимости фиксировать незавершенную работу в текущей ветке
git diff – показывает разницу между ветками или коммитами (git diff master branchB)
'''